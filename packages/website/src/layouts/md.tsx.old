
import { defineComponent, onBeforeUnmount, onMounted, provide, reactive, ref } from 'vue'

// import {article} from "windicss/plugin/typography"
import DefaultMd from './default_md'
export default defineComponent({
	props: {'name': String},
	setup(_, {slots}) {
		const handleScroll = () => {
			// 设备/屏幕高度
			const clientHeight = document.documentElement.clientHeight || document.body.clientHeight
			// 滚动区域到头部的距离
			// let scrollTop = document.documentElement.scrollTop || document.body.scrollTop

			const header = document.getElementById('header')?.getBoundingClientRect().bottom
			if (header >= 0) {
				document.getElementById('leftnav')?.style.setProperty('top', header + 'px')
				document.getElementById('rightmenu')?.style.setProperty('top', header + 'px')
			} else {
				document.getElementById('leftnav')?.style.setProperty('top', '0px')
				document.getElementById('rightmenu')?.style.setProperty('top', '0px')
			}
			
			const footer = document.getElementById('copyright')?.getBoundingClientRect().top
			if (clientHeight - footer >= 0) {
				document.getElementById('leftnav')?.style.setProperty('bottom', clientHeight - footer + 'px')
				document.getElementById('rightmenu')?.style.setProperty('bottom', clientHeight - footer + 'px')
			} else {
				document.getElementById('leftnav')?.style.setProperty('bottom', '0px')
				document.getElementById('rightmenu')?.style.setProperty('bottom', '0px')
			}

		}
		onMounted(() => {
			// 监听滚动事件，然后用handleScroll这个方法进行相应的处理
			window.addEventListener('scroll', handleScroll)
		})
		onBeforeUnmount(() => {
			window.removeEventListener('scroll', handleScroll)
		})
		const el = ref(null)
		return () => <DefaultMd>
			{() => {
				const ret = []
				ret.push(
				)
				return ret
			}}
		</DefaultMd>
	}
})
